// Performs addition, subtration, multiplication, modulo.

module adder ( 
    
  // Inputs from the ALU.
  input alufn[4],
  input a[16],  
  input b[16],  
    
  // Outputs to the ALU.
  output sum_out[16],
  output zvn[3]
    
) {
  
  sig sum[16]; // 9-bit output
  var i;
  
  always {
    
    case (alufn[1:0]) { // Alufn value controlling add or subtract operator
      
      00: // Addition.
        sum = a + b;  
      01: // Subtraction.
        sum = a - b;  
      10: // TODO: Add aditional functionality.
        sum = 0;
      11: // Multiply.
        sum = a * b;
        
      default:
        sum = 1111;
        
    }
    
    // Assigning values to outputs.
    
    sum_out = sum[15:0]; 
    zvn = ~|sum + (a[15] & ~b[15] & (~sum[15])) | ((~a[15])&(b[15])&sum[15]) + sum[7];    
  }
}