module adder ( //performs addition, subtration, multiplication, modulo
//inputs from the ALU
    input alufn[4],
    input a[16],  
    input b[16],  
//outputs to the ALU   
    output sum_out[16],
    output zvn[3]
  ) {
sig sum[16]; //9-bit output
  
  always {
    
    case(alufn[1:0]){ //alufn value controlling add or subtract operator
    00: 
      sum = a+b; //addition
    01:
      if(a > b){
      sum = a-b;}
      else{
        sum = b-a;} //subtraction
    10:
      sum = 0;
      //implement additional feature here
    11:
      sum = 0;
      //implement additional feature here
    default:
      sum = a+b;
  }
    //assigning values to outputs
    sum_out = sum[15:0]; 
    zvn = ~|sum + (a[15] & ~b[15] & (~sum[15])) | ((~a[15])&(b[15])&sum[15]) + sum[7];
    
}
}